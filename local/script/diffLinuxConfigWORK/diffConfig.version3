
allow_null_glob_expansion=setInScriptFile
set +f

function usage()  {
    echo usage: $0 configFile1 configFile2
    exit 1
}

####
# The timeStamp is handy for generating any
# unique-per-script-invocation temp files and such...
#
timeStamp=`date '+%Y%m%d%H%M%S'`
  md5List=md5List$timeStamp
  tempDir=/tmp/tempDir$timeStamp
 tempFile=$tempDir/tempFile$timeStamp
     dir1=$tempDir/dir1
     dir2=$tempDir/dir2

mkdir -p $dir1
mkdir -p $dir2

if [ ! $# -eq 2 ]
then
    echo must mention two config files
    usage
fi

if [ ! -f $1 ]
then
    echo $1 not a file
    usage
fi

if [ ! -f $2 ]
then
    echo $2 not a file
    usage
fi

fgrep CONFIG $1 | while read rawLine
do
    echo "$rawLine" | grep -e '^[	 ]*#' >/dev/null
    enabled=$?
    if [ $enabled -eq 0 ]
    then                                                             # Disabled
        line=`echo "$rawLine" | sed -e 's/^[	 ]*#[	 ]*//' `
    else                                                              # Enabled
        line=`echo "$rawLine" | sed -e 's/^[	 ]*//' `
    fi
    token=`echo $line  | sed -e 's/[	 =].*$//' `

    mkdir -p $dir1/$token
    if [ $enabled -eq 0 ]
    then                                                             # Disabled
#echo "######## DISABLED1 <$token> <$rawLine>"
        echo "$rawLine" >$dir1/$token/DISABLED
    else                                                              # Enabled
#echo "######## ENABLED1 <$token> <$rawLine>"
        echo "$rawLine" >$dir1/$token/ENABLED
    fi
done



fgrep CONFIG $2 | while read rawLine
do
    echo "$rawLine" | grep -e '^[	 ]*#' >/dev/null
    enabled=$?
    if [ $enabled -eq 0 ]
    then                                                             # Disabled
        line=`echo "$rawLine" | sed -e 's/^[	 ]*#[	 ]*//' `
    else                                                              # Enabled
        line=`echo "$rawLine" | sed -e 's/^[	 ]*//' `
    fi
    token=`echo $line  | sed -e 's/[	 =].*$//' `

    mkdir -p $dir2/$token
    if [ $enabled -eq 0 ]
    then                                                             # Disabled
#echo "#### DISABLED2 <$token> <$rawLine>"
        echo "$rawLine" >$dir2/$token/DISABLED
    else                                                              # Enabled
#echo "#### ENABLED2 <$token> <$rawLine>"
        echo "$rawLine" >$dir2/$token/ENABLED
    fi
done

cd $dir1
for token in *
do
    if [ -f $token/ENABLED ]
    then
        if [ -f $token/DISABLED ]
        then
            echo "####" $token is both DISABLED and ENABLED - trimming...
            rm $token/DISABLED
        fi
    fi
done


cd $dir2
for token in *
do
    if [ -f $token/ENABLED ]
    then
        if [ -f $token/DISABLED ]
        then
            echo "####" $token is both DISABLED and ENABLED - trimming...
            rm $token/DISABLED
        fi
    fi
done

cd $dir1
for token in *
do
    if [ -f $token/DISABLED  -a -f $dir2/$token/DISABLED ]
    then
        echo $token >>$tempDir/commonDISABLED
        rm $token/DISABLED $dir2/$token/DISABLED
        rmdir       $token
        rmdir $dir2/$token
    fi

    if [ -f $token/ENABLED  -a -f $dir2/$token/ENABLED ]
    then
        if diff -qb $token/ENABLED $dir2/$token/ENABLED >/dev/null
        then
            cat $token/ENABLED >>$tempDir/commonENABLED
            rm $token/ENABLED $dir2/$token/ENABLED
            rmdir       $token
            rmdir $dir2/$token
        fi
    fi
done


cd $dir1
for token in *
do
    if [ -f $token/DISABLED ]
    then
        echo  $token >>$tempDir/uniqueDISABLED1
        rm    $token/DISABLED 
        rmdir $token
    fi

    if [ -f $token/ENABLED ]
    then
        cat   $token/ENABLED >>$tempDir/uniqueENABLED1
        rm    $token/ENABLED 
        rmdir $token
    fi

done


cd $dir2
for token in *
do
    if [ -f $token/DISABLED ]
    then
        echo  $token >>$tempDir/uniqueDISABLED2
        rm    $token/DISABLED 
        rmdir $token
    fi

    if [ -f $token/ENABLED ]
    then
        cat   $token/ENABLED >>$tempDir/uniqueENABLED2
        rm    $token/ENABLED 
        rmdir $token
    fi

done


echo "####" Common DISABLED options:
cat  $tempDir/commonDISABLED

echo "####" Common ENABLED options:
cat  $tempDir/commonENABLED

echo "####" Enabled options unique to $1:
cat  $tempDir/uniqueENABLED1

echo "####" Enabled options unique to $2:
cat  $tempDir/uniqueENABLED2

echo EARLY EXIT...
exit 1


cd $dir1/COMMON/ENABLED
for token in `find . -type f`
do
    if [ ! -f $dir2/COMMON/DISABLED/$token -a ! -f $dir2/COMMON/ENABLED/$token ]
    then
        mv $token $dir1/UNIQUE/ENABLED
    fi
done

cd $dir1/COMMON/DISABLED
for token in `find . -type f`
do
    if [ ! -f $dir2/COMMON/DISABLED/$token -a ! -f $dir2/COMMON/ENABLED/$token ]
    then
        mv $token $dir1/UNIQUE/DISABLED
    fi
done

echo "############# Disabled options unique to $1"
cd $dir1/UNIQUE/DISABLED/
for f in `find . -type f -print`
do
    cat $f
done

echo "############# Disabled options unique to $2"
cd $dir2/UNIQUE/DISABLED/
for f in `find . -type f -print`
do
    cat $f
done

echo "############# Enabled options unique to $1"
cd $dir1/UNIQUE/ENABLED/
for f in `find . -type f -print`
do
    cat $f
done

echo "############# Enabled options unique to $2"
cd $dir2/UNIQUE/ENABLED/
for f in `find . -type f -print`
do
    cat $f
done


echo "############# Common options, enabled but different..."
cd $dir1/COMMON/ENABLED
for token in `find . -type f -print`
do
    if ! diff -q $dir1/COMMON/ENABLED/$token $dir2/COMMON/ENABLED/$token >>$tempFile
    then
        echo "############ begin ############" $1 $token $2
        diff $dir1/COMMON/ENABLED/$token $dir2/COMMON/ENABLED/$token
        echo "############  end  ############" $1 $token $2
    fi
rm $token $dir2/COMMON/ENABLED/$token
done

 rm -rf $tempDir

