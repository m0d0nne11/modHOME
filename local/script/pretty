#indent -bap -br -bs -ce -d1 -nei -eei -nfc1 -i4 -lp -npcs -psl -st
#indent -bap -br -bs -ce -d1      -eei -nfc1 -i4 -lp -npcs -psl -st

indent  --blank-lines-after-declarations                   \
        --blank-lines-after-procedures                     \
        --braces-on-if-line                                \
        --brace-indent2                                    \
        --braces-on-struct-decl-line                       \
        --break-before-boolean-operator                    \
        --case-indentation0                                \
        --cuddle-else                                      \
        --case-brace-indentation0                          \
        --dont-format-comments                             \
        --dont-line-up-parentheses                         \
        --dont-space-special-semicolon                     \
        --k-and-r-style                                    \
        --original                                         \
        --no-comment-delimiters-on-blank-lines             \
        --no-parameter-indentation                         \
        --no-space-after-casts                             \
        --no-space-after-function-call-names               \
        --procnames-start-lines                            \
        --standard-output                                  \
        --space-after-parentheses                          \
 | detab                                                   \
 | sed -e 's/ if *(/ if(/g'                                \
       -e 's/ while *(/ while(/g'                          \
       -e 's/ for *(/ for(/g'                              \
       -e 's/ switch *(/ switch(/g'                        \
       -e 's/ return *(/ return(/g'                        \
       -e 's/[	 ]*$//'                                    \
       -e '/[^	 ][	 ]{$/s/{$/ {/'                     \
       -e 's/([	 ]*)$/()/'                                 \
       -e 's/([	 ]*);$/();/'                               \
       -e 's/( *\(char *\**\) *)/(\1)/g'                   \
       -e 's/( *\(float *\**\) *)/(\1)/g'                  \
       -e 's/( *\(int *\**\) *)/(\1)/g'                    \
       -e 's/( *\(long  *int *\**\) *)/(\1)/g'             \
       -e 's/( *\(long *\**\) *)/(\1)/g'                   \
       -e 's/( *\(signed  *char *\**\) *)/(\1)/g'          \
       -e 's/( *\(signed  *int *\**\) *)/(\1)/g'           \
       -e 's/( *\(unsigned  *char *\**\) *)/(\1)/g'        \
       -e 's/( *\(unsigned  *int *\**\) *)/(\1)/g'         \
       -e 's/( *\(unsigned *\**\) *)/(\1)/g'               \
       -e 's/( *\(unsigned  *long  *int *\**\) *)/(\1)/g'  \
       -e 's/( *\(unsigned  *long\) *)/(\1)/g'             \
       -e 's/( *\(unsigned  *long *\*\) *)/(\1)/g'         \
       -e 's/( *\(signed  *long  *int *\**\) *)/(\1)/g'    \
       -e 's/( *\(void *\**\) *)/(\1)/g'                   \
       -e 's/( *void *)/(void)/g'                          \
       -e 's/( *\(short  *int *\**\) *)/(\1)/g'            \
       -e 's/( *\(short *\**\) *)/(\1)/g'                  \
       -e 's/( *\(unsigned  *short  *int *\**\) *)/(\1)/g' \
       -e 's/( *\(unsigned  *short\) *)/(\1)/g'            \
       -e 's/( *\(unsigned  *short *\*\) *)/(\1)/g'        \
       -e 's/( *\(signed  *short  *int *\**\) *)/(\1)/g'   \


exit 0



#       -bad, --blank-lines-after-declarations
#           Force blank lines after the declarations.
#
#       -bap, --blank-lines-after-procedures
#           Force blank lines after procedure bodies.
#
#       -bbb, --blank-lines-after-block-comments
#           Force blank lines after block comments.
#
#       -bbo, --break-before-boolean-operator
#           Prefer to break long lines before boolean operators.
#
#       -bc, --blank-lines-after-commas
#           Force newline after comma in declaration.
#
#       -bl, --braces-after-if-line
#           Put braces on line after if, etc.
#
#       -blin, --brace-indentn
#           Indent braces n spaces.
#
#       -bls, --braces-after-struct-decl-line
#           Put braces on the line after struct declaration lines.
#
#       -br, --braces-on-if-line
#           Put braces on line with if, etc.
#
#       -brs, --braces-on-struct-decl-line
#           Put braces on struct declaration line.
#
#       -bs, --Bill-Shannon, --blank-before-sizeof
#           Put a space between sizeof and its argument.
#
#       -cn, --comment-indentationn
#           Put comments to the right of code in column n.
#
#       -cbin, --case-brace-indentationn
#           Indent braces after a case label N spaces.
#
#       -cdn, --declaration-comment-columnn
#           Put comments to the right of the declarations in column n.
#
#       -cdb, --comment-delimiters-on-blank-lines
#           Put comment delimiters on blank lines.
#
#       -ce, --cuddle-else
#           Cuddle else and preceeding `}´.
#
#       -cin, --continuation-indentationn
#           Continuation indent of n spaces.
#
#       -clin, --case-indentationn
#           Case label indent of n spaces.
#
#       -cpn, --else-endif-columnn
#           Put comments to the right of #else and #endif statements in column n.
#
#       -cs, --space-after-cast
#           Put a space after a cast operator.
#
#       -dn, --line-comments-indentationn
#           Set indentation of comments not to the right of code to n spaces.
#
#       -din, --declaration-indentationn
#           Put variables in column n.
#
#       -fc1, --format-first-column-comments
#           Format comments in the first column.
#
#       -fca, --format-all-comments
#           Do not disable all formatting of comments.
#
#       -gnu, --gnu-style
#           Use GNU coding style.  This is the default.
#
#       -hnl, --honour-newlines
#           Prefer to break long lines at the position of newlines in the input.
#
#       -in, --indent-leveln
#           Set indentation level to n spaces.
#
#       -ipn, --parameter-indentationn
#           Indent parameter types in old-style function definitions by n spaces.
#
#       -kr, --k-and-r-style
#           Use Kernighan & Ritchie coding style.
#
#       -ln, --line-lengthn
#           Set maximum line length for non-comment lines to n.
#
#       -lcn, --comment-line-lengthn
#           Set maximum line length for comment formatting to n.
#
#       -lp, --continue-at-parentheses
#           Line up continued lines at parentheses.
#
#       -lps, --leave-preprocessor-space
#           Leave space between `#´ and preprocessor directive.
#
#       -nbad, --no-blank-lines-after-declarations
#           Do not force blank lines after declarations.
#
#       -nbap, --no-blank-lines-after-procedures
#           Do not force blank lines after procedure bodies.
#
#       -nbbo, --break-after-boolean-operator
#           Do not prefer to break long lines before boolean operators.
#
#       -nbc, --no-blank-lines-after-commas
#           Do not force newlines after commas in declarations.
#
#       -ncdb, --no-comment-delimiters-on-blank-lines
#           Do not put comment delimiters on blank lines.
#
#       -nce, --dont-cuddle-else
#           Do not cuddle } and else.
#
#       -ncs, --no-space-after-casts
#           Do not put a space after cast operators.
#
#       -nfc1, --dont-format-first-column-comments
#           Do not format comments in the first column as normal.
#
#       -nfca, --dont-format-comments
#           Do not format any comments.
#
#       -nhnl, --ignore-newlines
#           Do not prefer to break long lines at the position of newlines in the input.
#
#       -nip, --no-parameter-indentation
#           Zero width indentation for parameters.
#
#       -nlp, --dont-line-up-parentheses
#           Do not line up parentheses.
#
#       -npcs, --no-space-after-function-call-names
#           Do not put space after the function in function calls.
#
#       -nprs, --no-space-after-parentheses
#           Do not put a space after every ´(´ and before every ´)´.
#
#       -npsl, --dont-break-procedure-type
#           Put the type of a procedure on the same line as its name.
#
#       -nsc, --dont-star-comments
#           Do not put the `*´ character at the left of comments.
#
#       -nsob, --leave-optional-blank-lines
#           Do not swallow optional blank lines.
#
#       -nss, --dont-space-special-semicolon
#           Do not force a space before the semicolon after certain statements.  Disables `-ss´.
#
#       -nv, --no-verbosity
#           Disable verbose mode.
#
#       -orig, --original
#           Use the original Berkeley coding style.
#
#       -npro, --ignore-profile
#           Do not read `.indent.pro´ files.
#
#       -pcs, --space-after-procedure-calls
#           Insert a space between the name of the procedure being called and the `(´.
#
#       -pin, --paren-indentationn
#           Specify the extra indentation per open parentheses ´(´ when a statement is broken.See  STATEMENTS.
#
#       -pmt, --preserve-mtime
#           Preserve access and modification times on output files.See  MISCELLANEOUS OPTIONS.
#
#       -prs, --space-after-parentheses
#           Put a space after every ´(´ and before every ´)´.
#
#       -psl, --procnames-start-lines
#           Put the type of a procedure on the line before its name.
#
#       -sbin, --struct-brace-indentationn
#           Indent braces of a struct, union or enum N spaces.
#
#       -sc, --start-left-side-of-comments
#           Put the `*´ character at the left of comments.
#
#       -sob, --swallow-optional-blank-lines
#           Swallow optional blank lines.
#
#       -ss, --space-special-semicolon
#           On one-line for and while statments, force a blank before the semicolon.
#
#       -st, --standard-output
#           Write to standard output.
#
#       -T  Tell indent the name of typenames.
#
#       -tsn, --tab-sizen
#           Set tab size to n spaces.
#
#       -v, --verbose
#           Enable verbose mode.
#
#       -version
#           Output the version number of indent.

