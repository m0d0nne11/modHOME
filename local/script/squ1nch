#! /bin/bash

myName=$0

function usage()  {
    echo "usage: ${myName}" '[h012]' ;
}

function fail()  {
    echo FAILED: $@ ;
    usage ;
    exit 1 ;
}

function squ1nchFunc0()  { tr  "BEOSZbilosz"     "83052611052"    | tr "[1-9][B-Z][b-z]Aa0" "[0-8][A-Y][a-y]Zz9" ; } ;
function squ1nchFunc1()  { tr  "BEOSTZbilostz"   "8305+261105+2"  | tr "[1-9][B-Z][b-z]Aa0" "[0-8][A-Y][a-y]Zz9" ; } ;
function squ1nchFunc2()  { tr "ABEOSZbgilosz"   "4830526911052"   | tr "[1-9][B-Z][b-z]Aa0" "[0-8][A-Y][a-y]Zz9" ; } ;
function squ1nchFunc()   { tr "ABEOSTZabilostz" "@8305+2@61105+2" | tr "[1-9][B-Z][b-z]Aa0" "[0-8][A-Y][a-y]Zz9" ; } ;

currentOptArg=""

while : ; do

#        getopts ":012h"  currentOptArg ;
    if ! getopts  "012h"  currentOptArg ; then
        fail $@ ;
    fi ;


    case "$currentOptArg" in
    '?')                                                # End of supplied args.
        fail $@ ;
        ;;
    h)
        usage ;
        exit ;
        ;;
    0)
        squ1nchFunc0 "$@" ;
        exit ;
        ;;
    1)
        squ1nchFunc1 "$@" ;
        exit ;
        ;;
    2)
        squ1nchFunc2 "$@" ;
        exit ;
        ;;
    *)
        fail $@ ;
        ;;
    esac ;

done ;

squ1nchFunc ;


#getopts: getopts optstring name [arg ...]
#    Parse option arguments.
#
#    Getopts is used by shell procedures to parse positional parameters
#    as options.
#
#    OPTSTRING contains the option letters to be recognized; if a letter
#    is followed by a colon, the option is expected to have an argument,
#    which should be separated from it by white space.
#
#    Each time it is invoked, getopts will place the next option in the
#    shell variable $name, initializing name if it does not exist, and
#    the index of the next argument to be processed into the shell
#    variable OPTIND.  OPTIND is initialized to 1 each time the shell or
#    a shell script is invoked.  When an option requires an argument,
#    getopts places that argument into the shell variable OPTARG.
#
#    getopts reports errors in one of two ways.  If the first character
#    of OPTSTRING is a colon, getopts uses silent error reporting.  In
#    this mode, no error messages are printed.  If an invalid option is
#    seen, getopts places the option character found into OPTARG.  If a
#    required argument is not found, getopts places a ':' into NAME and
#    sets OPTARG to the option character found.  If getopts is not in
#    silent mode, and an invalid option is seen, getopts places '?' into
#    NAME and unsets OPTARG.  If a required argument is not found, a '?'
#    is placed in NAME, OPTARG is unset, and a diagnostic message is
#    printed.
#
#    If the shell variable OPTERR has the value 0, getopts disables the
#    printing of error messages, even if the first character of
#    OPTSTRING is not a colon.  OPTERR has the value 1 by default.
#
#    Getopts normally parses the positional parameters, but if arguments
#    are supplied as ARG values, they are parsed instead.
#
#    Exit Status:
#    Returns success if an option is found; fails if the end of options is
#    encountered or an error occurs.

