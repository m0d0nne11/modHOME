# This file (Bmod) is part of modHOME, a portable (and almost
# entirely non-invasive) home directory implementation that I
# (mod=Michael O'Donnell) sometimes inflict on systems (via
# "git clone" or tarball expansion) so that I can have familiar
# surroundings (aliases, functions, environment variables, init
# scripts, etc) that reflect my preferences.  The modHOME
# environment can be installed/initialized for any user, thus:
#
#    cd; git clone https://github.com/m0d0nne11/modHOME
#
# ...or (assuming tarball available) thus:
#
#    cd; tar xvzf modHOME.tgz
#
# ...followed thus:
#
#    . Bmod; pathPreen; rememberPATH
#
# Subsequent uses then require only sourcing this Bmod script:
#
#    . Bmod
#
# It should be true that this modHOME stuff can be safely left
# in place since it generally has no (well, OK - very little...)
# effect on other users who do not explicitly put it into
# effect via the Bmod script.
#
# Please note that I try not to leave precious files anywhere in
# the modHOME hierarchy so it should always be OK to delete it
# without notice if you feel the need to tidy things up, though
# it'd be good manners to talk to me first, if possible...  ;->
#
# REMOVAL: rm -rf ~/modHOME should pretty much do it, though check
#          for dangling symlinks in ~/. pointing into modHOME/...
# (RE)CREATING TARBALL: modHOME/modHOMEtarballUpdate.sh
# ROOT USAGE: I frequently install/use this as root in root's
#             home directory but security-conscious folks will,
#             of course, not just take my word for it that
#             there's nothing nasty herein!  Once you've
#             verified, though, you'll want to then do something
#             like "chown -R 0.0 ~/modHOME" or otherwise adjust
#             ownerships/permissions to suit your circumstances.
#
# mod.modHOME@spineless.org

startingDir=$PWD

#HOME=$(eval "eval 'echo ~`whoami`'")

if cd ~/modHOME/. ; then
    modHOME="$PWD"
    cd			# ASSUME: no symlinks involved.

    # Force glob patterns that match nothing to expand to
    # empty strings rather than their literal selves.
    #
    shopt -s nullglob

    # Lose ALL currently defined aliases
    #eval "$(alias | sed -e 's/=.*$//' -e 's/^.* //' | while read f; do if alias "${f}" > /dev/null 2>&1 ; then echo "unalias '${f}' ;" ; fi; done)"
    unalias -a

#   rm -rf   .config .dbus .gconf .gconfd .gnome2 .ICEauthority          .screen .ssh .Xauthority .xauth*
#   for f in .config .dbus .gconf .gconfd .gnome2 .ICEauthority          .screen .ssh .Xauthority ; do
#       ln -fs hostDir/$f ;
#   done
#
#   unset x
#   unset f

#    export PS1_EXTRA=SITE_NAME
    . $modHOME/.bashrc

    history -c
    history -r
else
    echo Cannot cd ~/modHOME/.
fi

cd $startingDir

